# -*- coding: utf-8 -*-
"""data-generation-pipeline.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XaOxOjBSCw7TairREYul38CWvkl4bFg4
"""

!apt-get -y install poppler-utils

!apt-get update

import cv2
import os
import pytesseract
from PIL import Image
import shutil
import warnings
base = "/kaggle/input/placement17-20/Placement Resume Repository 2017-2020"
from pdf2image import convert_from_path

# Ignore DecompressionBombWarning from the Image module
warnings.simplefilter('ignore', Image.DecompressionBombWarning)

# Iterate through profiles in the base directory
for profiles in os.listdir(base):
    profile_path = os.path.join(base, profiles)

    # Skip .DS_Store files
    if profile_path.endswith('.DS_Store'):
        continue

    # Iterate through years in the profile directory
    for year in os.listdir(profile_path):
        year_path = os.path.join(profile_path, year)

        # Iterate through companies in the year directory
        for company in os.listdir(year_path):
            company_path = os.path.join(year_path, company)

            # Skip .DS_Store files and PDF files in the company directory
            if company_path.endswith('.DS_Store') or company_path.endswith('.pdf') == True:
                continue

            # Iterate through PDF files in the company directory
            for pdf in os.listdir(company_path):
                pdf_path = os.path.join(company_path, pdf)

                # Skip .DS_Store files and non-PDF files
                if pdf_path.endswith('.DS_Store') or pdf_path.endswith('.pdf') == False:
                    continue

                # Convert each page of the PDF to images
                images = convert_from_path(pdf_path)

                # Extract the name from the PDF file
                name = pdf.split('.')[-2]

                # Save each image as a JPEG file
                for i in range(len(images)):
                    images[i].save(f'{name}' + str(i) + '.jpg', 'JPEG')

# Specify the image folder path
image_folder = "/kaggle/working/"

# Create a list of JPEG files in the specified image folder
jpeg_files = [f for f in os.listdir(image_folder) if f.endswith('.jpg')]

# Create an empty list to store full paths of JPEG files
paths = []

# Iterate through each JPEG file in the list
for i in jpeg_files:
    # Join the file name with the image folder path to get the full file path
    paths.append(os.path.join(image_folder, i))

text_ = []

len(paths)

# Initialize a counter variable
i = 0

# Iterate through each path in the list of full paths
for path in paths:
    # Print the current counter value
    print(i)

    # Open the image using the Image module
    img = Image.open(path)

    # Use Tesseract OCR to extract text from the image
    text = pytesseract.image_to_string(img)

    # Append the extracted text to the 'text_' list
    text_.append(text)

    # Increment the counter
    i = i + 1

text_

os.makedirs('/kaggle/working/Txt_files')

# Open the text file in write mode

for i in range(len(text_)):
    with open(f"/kaggle/working/Txt_files/output_{i}.txt", 'w') as file:
        file.write(f"{text_[i]}")

!zip -r file.zip /kaggle/working/Txt_files

